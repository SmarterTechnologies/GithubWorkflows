name: Deploy to Azure Static Website
on:
  workflow_call:
    inputs:
      resource-group:
        description: "The name of the Azure resource group"
        required: false
        type: string
      account-name:
        description: "The storage account name"
        required: true
        type: string
    secrets:
      token:
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master

      # Get IP address - if prod
      - name: Get Public IP
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
        id: ip
        uses: haythem/public-ip@v1.2

      # Login to Azure
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.token }}

      # Whitelist the IP address - if prod branch
      - name: Set IP whitelist for this IP (Prod Only)
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az storage account network-rule add -g ${{ inputs.resource-group }} --account-name ${{ inputs.account-name }} --ip-address ${{ steps.ip.outputs.ipv4 }}

      # Sleep to allow network rule to propagate - if prod branch
      - name: Sleep for 60s (Prod Only)
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
        run: sleep 60s
        shell: bash

      # download source folder but error and exit if they don't exist
      - name: Download build output from artifacts
        id: build-folder
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist

      # Clear blob storage if build folder exists
      - name: Delete blob storage contents
        uses: azure/CLI@v1
        with:
          azcliversion: latest
          inlineScript: |
            container_exists=$(az storage container exists --name '$web' --account-name ${{ inputs.account-name }} --auth-mode login --query exists)
            if [ "$container_exists" == "true" ]; then
              az storage blob delete-batch -s '$web' --account-name ${{ inputs.account-name }} --auth-mode login
            else
              echo "Container '$web' does not exist. Skipping delete operation."
            fi

      # Upload to $web container
      - name: Upload to blob storage
        uses: azure/CLI@v1
        with:
          azcliversion: latest
          inlineScript: |
            az storage blob upload-batch --account-name ${{ inputs.account-name }} -d '$web' -s dist

      # Remove the IP from list - if prod branch
      - name: Remove IP from whitelist
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
        uses: azure/CLI@v1
        with:
          azcliversion: latest
          inlineScript: |
            az storage account network-rule remove -g ${{ inputs.resource-group }} --account-name ${{ inputs.account-name }} --ip-address ${{ steps.ip.outputs.ipv4 }}

      # Sign out of Azure
      - name: Logout of Azure
        run: az logout
        if: always()
