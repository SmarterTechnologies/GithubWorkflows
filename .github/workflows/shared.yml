name: Reusable Echo Workflow

on:
  workflow_call:
    inputs:
      branch-name:
        required: true
        type: string
        description: 'The name of the branch being processed.'
      functionapp-name:
        description: 'The name of the function app.'
        required: true
        type: string
      resource-group:
        required: true
        type: string
        description: 'The Azure resource group containing the Azure Function app.'
    secrets:
      azure-credentials:
        required: true
        description: 'Azure service principal credentials for login.'
      jira-user-email:
        required: true
        description: 'Email of the Jira user for authentication.'
      jira-base-url:
        required: true
        description: 'Base URL of the Jira instance.'
      jira-api-token:
        required: true
        description: 'API token for the Jira user.'

jobs:
  branch-check-and-echo:
    runs-on: ubuntu-latest
    steps:
      - name: Fetch Default Branch Name
        id: fetch-default-branch
        run: |
          DEFAULT_BRANCH=$(curl -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
          https://api.github.com/repos/${{ github.repository }} | jq -r '.default_branch')
          echo "Fetched default branch is $DEFAULT_BRANCH"
        shell: bash

      - name: Check and Echo Branch Name
        if: ${{ inputs.branch-name != 'main' && inputs.branch-name != 'master' && inputs.branch-name != env.DEFAULT_BRANCH }}
        run: echo "Hello World, I am deleting ${{ inputs.branch-name }}"
  setup:
    name: Call Create Slot Name Workflow
    uses: SmarterTechnologies/GithubWorkflows/.github/workflows/create-slot-name.yml@main
    with:
      webApp: ${{ inputs.functionapp-name }}
  stop-and-delete-slot:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.azure-credentials }}

      - name: Stop the Function App Slot
        run: |
          az functionapp stop --name ${{ inputs.functionapp-name }} --resource-group ${{ inputs.resource-group }} --slot ${{ needs.setup.outputs.slot-name }}
          echo "Slot ${{ needs.setup.outputs.slot-name }} has been stopped."

      - name: Delete the Function App Slot
        run: |
          az functionapp deployment slot delete --name ${{ inputs.functionapp-name }} --resource-group ${{ inputs.resource-group }} --slot ${{ needs.setup.outputs.slot-name }} --yes
          echo "Slot ${{ needs.setup.outputs.slot-name }} has been deleted."